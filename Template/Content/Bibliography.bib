@inproceedings{DeCandia2007a,
	author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
	title = {Dynamo: Amazon's Highly Available Key-value Store},
	booktitle = {Proceedings of 21st ACM SIGOPS Symposium on Operating Systems Principles (SOSP)},
	pages = {205--220},
	year = {2007},
	doi = {10.1145/1294261.1294281}
}


@book{Golumbic2004a,
	author = {Golumbic, Martin Charles},
	title = {Algorithmic Graph Theory and Perfect Graphs},
	series = {Annals of Discrete Mathematics},
	volume = {57},
	edition = {Second},
	publisher = {Elsevier},
	year = {2004},
	isbn = {0444515305}
}


@techreport{Jain1984a,
	author = {Jain, Rajendra K. and Chiu, Dah-Ming W. and Hawe, William R.},
	title = {A Quantitative Measure of Fairness and Discrimination for Resource Allocation in Shared Computer Systems},
	institution = {Digital Equipment Corporation},
	number = {DEC-TR-301},
	year = {1984},
	url = {http://www.cse.wustl.edu/~jain/papers/ftp/fairness.pdf}
}


@article{Newman2003a,
	author = {Newman, Mark E. J.},
	title = {The Structure and Function of Complex Networks},
	journal = {SIAM Review},
	volume = {45},
	number = {2},
	pages = {167--256},
	year = {2003},
	doi = {10.1137/S003614450342480}
}


@phdthesis{beckmann_managing_2006,
	type = {{PhD} {Thesis}},
	title = {Managing {Wire} {Delay} in {Chip} {Multiprocessor} {Caches}},
	school = {Department of Computer Sciences, University of Wisconsin-Madison},
	author = {Beckmann, Bradford},
	month = aug,
	year = {2006}
}

@incollection{lai_efficient_2004,
	title = {Efficient {Victim} {Mechanism} on {Sector} {Cache} {Organization}},
	url = {http://www.springerlink.com/content/aklx8nk7vch3tr4u},
	abstract = {In this paper we present an victim cache design for caches organized with line that contains multiple sectors (sector cache). Sector caches use less memory bits to store tags than non-sectored caches. Victim cache has been proposed to alleviate conflict misses in a lower associative cache design. This paper examines how victim cache can be implemented in a sector cache and proposes a further optimization of the victim buffer design in which only the tags of the victim lines are remembered to re-use data in the sector cache. This design is more efficient because only an additional “OR” operation is needed in the tag checking critical path. We use a full system simulator to generate traces and a cache simulator to compare the miss ratios of different victim cache designs in sector caches. Simulation results show that this proposed design has comparable miss ratios with designs having much more complexity.},
	booktitle = {Advances in {Computer} {Systems} {Architecture}},
	author = {Lai, Chunrong and Lu, Shih-Lien},
	year = {2004},
	pages = {16--29}
}


@online{rubino_ie9_nodate,
	title = {{IE9} for {Windows} {Phone} 7: {Adobe} {Flash}, demos and development},
	url = {http://www.wpcentral.com/ie9-windows-phone-7-adobe-flash-demos-and-development-video},
	urldate = {2019-01-10},
	author = {Rubino, Daniel},
	collaborator = {{Windows Phone Central}}
}
